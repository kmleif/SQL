# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1. List the artist and track name of songs with a popularity over 85 and liveness over 0.4
SELECT artist_name, track_name FROM BIT_DB.Spotifydata 
WHERE popularity > 85
AND liveness > 0.4

#2. What are the top 5 most popular song
SELECT track_name  FROM BIT_DB.Spotifydata 
ORDER BY popularity DESC LIMIT 5

#3. How many songs are there in the database?
SELECT count(*) FROM  BIT_DB.Spotifydata 

#4.List all songs in alphabetical order. 
SELECT track_name
FROM  BIT_DB.Spotifydata 
ORDER BY track_name asc

#5. Use a CTE (common table expression) to calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popularity_average AS (
SELECT artist_name,
AVG(popularity) AS average_popularity
FROM SpotifyData  
GROUP BY artist_name
)
 SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average
WHERE average_popularity>=90
