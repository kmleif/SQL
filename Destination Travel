CREATE TABLE destination_travel
    (id INTEGER PRIMARY KEY, destination TEXT, tavel_time INTEGER, price INTEGER, mood TEXT)
;

CREATE TABLE prior_travel
    (id INTEGER PRIMARY KEY, destination TEXT, year_traveled INTEGER)
;

CREATE TABLE travel_friends
    (id INTEGER PRIMARY KEY, name TEXT, vibe TEXT)
;

INSERT INTO destination_travel
    ("id", "destination", "tavel_time", "price", "mood")
VALUES
  ("1", "Fuji",	"5", "5000", "relax"),
  ("2", "Bora Bora", "6", "6000", "learn"),
  ("3", "Turks & Caicos", "7", "4000", "relax"),
  ("4", "Bahamas", "3", "3500", "party"),
  ("5", "Maldives", "7", "4500", "learn"),
  ("6", "Tahiti", "6",	"5500", "relax"), 
  ("7", "St. Lucia", "3", "3200", "relax"),
  ("8", "Maui",	"5", "6300", "party"),
  ("9", "Bermuda", "6", "4700", "party"),
;

INSERT INTO prior_travel
    ("id", "destination", "year_traveled")
VALUES
  ("1",	"Mexico", "2022"),
  ("2",	"Jamaica", "2019"),
  ("3",	"Puerto Rico", "2023"),
  ("4",	"Honolulu", "2020")
;

INSERT INTO travel_friends
    ("id", "name", "vibe")
VALUES
  ("1",	"Sally", "Party"),
  ("2",	"Jane",	"Relax"),
  ("3",	"Amy",	"Learn"),
  ("4",	"Emma",	"Learn"),
  ("5",	"Mia",	"Party"),
  ("6",	"Luna",	"Relax")
;


How many new destinations are there?:
select count(*) FROM "destination_travel";


List new destinations in alphadetial order:
select "destination" FROM "destination_travel" ORDER BY title asc;


List the best desitnation mood for each person's vide:
SELECT destination_travel.destination, travel_friends.name
    FROM destination_travel
	JOIN travel_friends
	ON destination_travel.mood = travel_friends.vibe;


List new destination options with price under 4000
SELECT destination FROM destination_travel HAVING price > 4000;


List new destination options above the average price in decending order
SELECT destination, price FROM destination_travel
WHERE cost < (SELECT AVG (price) FROM destination_travel)
ORDER BY price DESC;


List prior destinations traveled
SELECT * prior_travel;
